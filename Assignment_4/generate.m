function gen = generate(g, p)
    %GENERATE checks if a natural number g is generating set of a
    %multiplicative group determined by the prime number p.
    %Note: criteria used:
    %   Factorize (p - 1) = q(1)^{h(1)} · ... · q(n)^{h(n)}
    %   g is generating set of Fp_star if, and only if, g^{(p - 1)/q(i)}
    %   mod p not equal to 1, for all 1 <= i <= n.
    %   GEN = GENERATE(G, P) returns:
    %       - 0: if the number is not a generating set of a group.
    %       - g: if g is a generator number.
    
    tic
    
    g = uint64(g);
    p = uint64(p);
    gen = 0;
    
    % Fp_star = (Zp -{0},·). Set to be generated by g.
    Fp_star = uint64(1):(p - uint64(1));
    
    % Factorize (p - 1) = q(1)^{h(1)} · ... · q(n)^{h(n)} (Unique).
    n = p - 1;
    i = 2;
    q = [];
    while n ~= 1
        while rem(n, i) == 0
            q(end + 1) = i;
            n = n / i;
        end
        i = i + 1;
    end
    
    q = unique(q);
    
    % g is generating set of Fp_star if, and only if, g^{(p - 1)/q(i)}
    %   mod p not equal to 1, for all 1 <= i <= n.
    factors_length = length(q);
    
    for i = 1:factors_length
        % Apply binary exponentiation.
        if power_mod(g, ( (p - 1) / q(i) ), p) == 1
            warning('%d is not a generating set of F%d*.', g, p);
            return;
        end
    end
    
    gen = g;
    
    toc
end

